{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,kBAAmBJ,SAASC,cAAc,UAC1CI,KAAML,SAASC,cAAc,UAE/B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAcC,aAAY,WACFC,KAAKC,SAAW,GAEpCL,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKPV,EAAKM,kBAAkBY,iBAAiB,SAExC,SAAqBC,GACnBA,EAAIC,iBAKJ,IAJA,IAAIC,GAAerB,EAAKC,WAAWqB,MAC7BC,GAAcvB,EAAKI,UAAUkB,MAC7BE,GAAgBxB,EAAKK,YAAYiB,MAE9BG,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EACtCjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDW,GAAeE,EAEjBvB,EAAKO,KAAK2B,O","sources":["src/js/03promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector(\"input[name='delay']\"),\n  inputStep: document.querySelector(\"input[name='step']\"),\n  inputAmount: document.querySelector(\"input[name='amount']\"),\n  createPromisesBtn: document.querySelector('button'),\n  form: document.querySelector('.form'),\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    timerStepId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nrefs.createPromisesBtn.addEventListener('click', onSubmitBtn);\n\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n  let delayNumber = +refs.inputDelay.value;\n  const stepNumber = +refs.inputStep.value;\n  const amountNumber = +refs.inputAmount.value;\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    createPromise(i, delayNumber)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayNumber += stepNumber;\n  }\n  refs.form.reset();\n}\n"],"names":["$6JpON","parcelRequire","$77270a0d6d8cdd67$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","createPromisesBtn","form","$77270a0d6d8cdd67$var$createPromise","position","delay","Promise","resolve","reject","timerStepId","setInterval","Math","random","addEventListener","evt","preventDefault","delayNumber","value","stepNumber","amountNumber","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.7477482b.js.map"}