{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,kBAAmBJ,SAASC,cAAc,UAC1CI,KAAML,SAASC,cAAc,UAE/B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAcC,aAAY,KACFC,KAAKC,SAAW,GAEpCL,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAM,GAE1BA,EAAA,GAEP,CAGAV,EAAKM,kBAAkBY,iBAAiB,SAExC,SAAqBC,GACnBA,EAAIC,iBACJ,IAAIC,GAAerB,EAAKC,WAAWqB,MACnC,MAAMC,GAAcvB,EAAKI,UAAUkB,MAC7BE,GAAgBxB,EAAKK,YAAYiB,MAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EACtCjB,EAAciB,EAAGJ,GACdK,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAuBpB,QAAeC,MAAS,IAGlDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAsBtB,QAAeC,MAAS,IAGpDW,GAAeE,EAEjBvB,EAAKO,KAAKyB,OACZ","sources":["src/js/03promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector(\"input[name='delay']\"),\n  inputStep: document.querySelector(\"input[name='step']\"),\n  inputAmount: document.querySelector(\"input[name='amount']\"),\n  createPromisesBtn: document.querySelector('button'),\n  form: document.querySelector('.form'),\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    timerStepId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nrefs.createPromisesBtn.addEventListener('click', onSubmitBtn);\n\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n  let delayNumber = +refs.inputDelay.value;\n  const stepNumber = +refs.inputStep.value;\n  const amountNumber = +refs.inputAmount.value;\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    createPromise(i, delayNumber)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayNumber += stepNumber;\n  }\n  refs.form.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$2d43480dcb2ff1c3$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","createPromisesBtn","form","$2d43480dcb2ff1c3$var$createPromise","position","delay","Promise","resolve","reject","timerStepId","setInterval","Math","random","addEventListener","evt","preventDefault","delayNumber","value","stepNumber","amountNumber","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e24f61a5.js.map"}